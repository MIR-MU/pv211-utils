name: Test and publish
on:
  push:
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  style-check:
    name: Style check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python: ['3.9', '3.11']
    container:
      image: python:${{ matrix.python }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install requirements
        run: |
          set -ex
          python -V
          pip install -U pip
          # CHANGED: Added "numpy<2" to prevent compilation errors.
          pip install "numpy<2" . flake8
      - name: Style check
        run: flake8 --ignore=W293,W291,W503,E203

  type-check:
    name: Type check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python: ['3.9', '3.11']
    container:
      image: python:${{ matrix.python }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install requirements
        run: |
          set -ex
          python -V
          pip install -U pip
          apt-get update && apt-get install -y --no-install-recommends cargo
          # CHANGED: Added "numpy<2" to prevent compilation errors.
          pip install "numpy<2" .[google_drive] pytype
      - name: Type check
        run: |
          set -ex
          pytype pv211_utils script test

  unit-tests:
    needs: ['style-check', 'type-check']
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python: ['3.9', '3.11']
    container:
      image: python:${{ matrix.python }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install requirements
        run: |
          set -ex
          python -V
          pip install -U pip
          # CHANGED: Added "numpy<2" to prevent compilation errors.
          pip install "numpy<2" . pytest
      - name: Unit tests
        run: python -m pytest

  publish:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: ['unit-tests']
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t miratmu/pv211-utils:latest \
                       -t miratmu/pv211-utils:$(git describe --tags --always --long) .
          docker push --all-tags miratmu/pv211-utils